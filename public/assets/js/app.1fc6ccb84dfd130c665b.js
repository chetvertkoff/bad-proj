!function(e){function t(t){for(var r,u,l=t[0],c=t[1],i=t[2],f=0,s=[];f<l.length;f++)u=l[f],Object.prototype.hasOwnProperty.call(a,u)&&a[u]&&s.push(a[u][0]),a[u]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(p&&p(t);s.length;)s.shift()();return o.push.apply(o,i||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,l=1;l<n.length;l++){var c=n[l];0!==a[c]&&(r=!1)}r&&(o.splice(t--,1),e=u(u.s=n[0]))}return e}var r={},a={0:0},o=[];function u(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,u),n.l=!0,n.exports}u.m=e,u.c=r,u.d=function(e,t,n){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,t){if(1&t&&(e=u(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(u.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)u.d(n,r,function(t){return e[t]}.bind(null,r));return n},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="/";var l=window.webpackJsonp=window.webpackJsonp||[],c=l.push.bind(l);l.push=t,l=l.slice();for(var i=0;i<l.length;i++)t(l[i]);var p=c;o.push([25,1]),n()}({22:function(e,t,n){var r=n(23),a=n(24);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},u=(r(a,o),a.locals?a.locals:{});e.exports=u},24:function(e,t,n){},25:function(e,t,n){"use strict";n.r(t);var r=n(4),a=n.n(r),o=n(0),u=n.n(o),l=n(2),c=n.n(l),i=n(5),p=n.n(i),f=n(1),s=n.n(f),d=function(e){return u.a.createElement(u.a.Fragment,null,u.a.createElement("input",{type:e.type?e.type:"text",placeholder:e.placeholder?e.placeholder:"",value:e.value||"",onChange:function(t){e.getVal(t.target.value)}}))},m=function(e){var t=Object(o.useState)(),n=s()(t,2),r=n[0],a=n[1],l=Object(o.useState)(),c=s()(l,2),i=c[0],p=c[1];return u.a.createElement("form",{onSubmit:function(t){t.preventDefault(),e.getLetters("".concat(r.charAt(r)).concat(i.charAt(i)))}},u.a.createElement(d,{placeholder:"Введи имя",getVal:function(e){a(e)},value:r}),u.a.createElement(d,{placeholder:"Введи фамилию",getVal:function(e){p(e)},value:i}),u.a.createElement("button",null,"Отправить"))},h=function(e){var t=e.image;return function(){var e=new Audio;e.preload="auto",e.src="/upload/mp3.mp3",e.play()}(),u.a.createElement("div",null,u.a.createElement("img",{width:"200px",height:"200px",src:t,alt:""}))},v=n(6),g=n.n(v),y=n(7),b=n.n(y),E=n(8),w=n.n(E),j=n(9),O=n.n(j),x=n(10),S=n.n(x),_=function(e){function t(){return g()(this,t),w()(this,O()(t).apply(this,arguments))}return S()(t,e),b()(t,[{key:"render",value:function(){return u.a.createElement("div",null,u.a.createElement("img",{width:"200px",height:"200px",src:"/upload/preloader.jpg",alt:""}))}}]),t}(o.Component),P=function(){var e=Object(o.useState)(),t=s()(e,2),n=(t[0],t[1],Object(o.useState)()),r=s()(n,2),a=r[0],l=r[1],i=Object(o.useState)(!1),f=s()(i,2),d=f[0],v=f[1];function g(e){var t="";return[].slice.call(new Uint8Array(e)).forEach((function(e){return t+=String.fromCharCode(e)})),window.btoa(t)}var y=function(){var e=p()(c.a.mark((function e(t){return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return v(!0),e.next=3,fetch("https://ulianovkd.pythonanywhere.com/?text=".concat(t));case 3:e.sent.arrayBuffer().then((function(e){var t=g(e);l("data:image/jpeg;base64,"+t)})),setTimeout((function(){v(!1)}),500);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return u.a.createElement("div",{className:"body"},d?u.a.createElement(_,null):a?u.a.createElement(h,{image:a}):u.a.createElement(m,{getLetters:y}))},k=function(){return u.a.createElement("div",{className:"app"},u.a.createElement(P,null))};a.a.render(u.a.createElement(k,null),document.getElementById("root"));n(22)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,